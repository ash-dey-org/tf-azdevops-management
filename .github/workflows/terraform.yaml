name: "Terraform"

on:
  push:
    branches:
      - develop
      - main
  workflow_dispatch:

permissions:
  id-token: write
  contents: read
  pull-requests: write

env:
  TF_CLOUD_ORGANIZATION: "${{vars.TF_CLOUD_ORGANIZATION}}"
  TF_WORKSPACE: "${{github.event.repository.name}}"
  AZDO_ORG_SERVICE_URL: "${{vars.AZDO_ORG_SERVICE_URL}}"
  AZDO_PERSONAL_ACCESS_TOKEN: "${{secrets.AZDO_PERSONAL_ACCESS_TOKEN}}"


jobs:

  plan:
    name: plan on push to develop branch
    if: ${{github.ref == 'refs/heads/develop' && github.event_name == 'push'}}
    # needs: file_exist

    runs-on: ubuntu-latest
    environment: dev

    # Use the Bash shell regardless of GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        working-directory: ./
        shell: bash
    steps:
      - uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

      - name: Terraform Format
        id: fmt
        run: terraform fmt -check

      - name: Terraform Init
        id: init
        run: terraform init

      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color

      - name: Terraform Plan
        id: plan
        run: terraform plan -no-color -input=false
        continue-on-error: true

      - name: Terraform Plan Status
        if: steps.plan.outcome == 'failure'
        run: exit 1

      - name: Create Issue on Failed workflow on plan
        if: ${{ failure() }}
        uses: dacbd/create-issue-action@main
        with:
          token: ${{ github.token }}
          title: Action workflow failed.
          body: |
            ### Context
            [Failed Run](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})
            [Codebase](https://github.com/${{ github.repository }}/tree/${{ github.sha }})
            Workflow name - `${{ github.workflow }}`
            Job -           `${{ github.job }}`
            status -        `${{ job.status }}`
          assignees: ash-dey-sa


  deploy:
    name: Deploy on push to main branch
    if: ${{github.ref == 'refs/heads/main' && github.event_name == 'push'}}
    # needs: file_exist

    runs-on: ubuntu-latest
    environment: prd

    # Use the Bash shell regardless of GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        working-directory: ./
        shell: bash
    steps:
      - uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

      - name: Terraform Format
        id: fmt
        run: terraform fmt -check

      - name: Terraform Init
        id: init
        run: terraform init

      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color

      - name: Terraform Plan
        id: plan
        run: terraform plan -no-color -input=false
        continue-on-error: true

      - name: Terraform Plan Status
        if: steps.plan.outcome == 'failure'
        run: exit 1

      - name: Terraform apply
        id: apply
        run: terraform apply -auto-approve -input=false
        continue-on-error: true

      - name: Terraform Apply Status
        if: steps.apply.outcome == 'failure'
        run: exit 1

      - name: Create Issue on Failed workflow on apply
        if: ${{ failure() }}
        uses: dacbd/create-issue-action@main
        with:
          token: ${{ github.token }}
          title: Action workflow failed.
          body: |
            ### Context
            [Failed Run](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})
            [Codebase](https://github.com/${{ github.repository }}/tree/${{ github.sha }})
            Workflow name - `${{ github.workflow }}`
            Job -           `${{ github.job }}`
            status -        `${{ job.status }}`
          assignees: ash-dey-sa
